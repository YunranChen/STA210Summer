{
  "hash": "9c7d3370261bb23b94be10638fea62e4",
  "result": {
    "markdown": "---\ntitle: \"Project Peer Review and Data Cleaning\"\nsubtitle: \"STA 210 - Summer 2022\"\nauthor: \"Yunran Chen\"\nfooter:  \"[yunranchen.github.io/STA210Summer/](https://yunranchen.github.io/STA210Summer/)\"\nlogo: \"images/logo.png\"\nformat: \n  revealjs:\n    theme: slides.scss\n    transition: fade\n    slide-number: true\n    incremental: true \n    chalkboard: true\n    highlight-style: ayu-mirage\ncode-link: true\neditor: visual\nexecute:\n  freeze: auto\n  echo: true\n---\n\n\n\n\n## Topics\n\n-   [Project Peer Review](https://yunranchen.github.io/STA210Summer/project-description.html#peer-teamwork-evaluation)\n\n-   Data Cleaning\n\n## Project Peer Review (20 min)\n\n## Data Cleaning using tidyverse \n\n-   Raw data to understanding, insight, and knowledge\n\n-   Workflow\n\n. . .\n\n![](images/lec-27/data-science.png)\n\n\n## Packages in Tidyverse\n\n![](images/lec-27/tidyverse.png)\n\n## Focus on data wrangling\n\n![](images/lec-27/data-science.png)\n\n-   Data import (`readr`)\n\n-   Tidy data (`tidyr`,`tibble`)\n\n-   Wrangle (`dplyr`,`stringr`, `lubridate`)\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\n## Data import using `readr` {.smaller}\n\n-   `read_csv`, ...\n\n-    `parse_*`: parse the characters/numbers only\n  \n. . .\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nparse_number(\"$100\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 100\n```\n:::\n\n```{.r .cell-code}\nparse_number(\"20%\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 20\n```\n:::\n\n```{.r .cell-code}\nparse_number(\"It cost $123.45\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 123.45\n```\n:::\n\n```{.r .cell-code}\n# Used in America\nparse_number(\"$123,456,789\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 123456789\n```\n:::\n\n```{.r .cell-code}\n# Used in many parts of Europe\nparse_number(\"123.456.789\", locale = locale(grouping_mark = \".\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 123456789\n```\n:::\n\n```{.r .cell-code}\n# Used in Switzerland\nparse_number(\"123'456'789\", locale = locale(grouping_mark = \"'\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 123456789\n```\n:::\n:::\n\n\n## function `parse` in pkg `readr` {.smaller}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nx1 <- \"El Ni\\xf1o was particularly bad this year\"\nx2 <- \"\\x82\\xb1\\x82\\xf1\\x82\\xc9\\x82\\xbf\\x82\\xcd\"\n\nx1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"El Ni\\xf1o was particularly bad this year\"\n```\n:::\n\n```{.r .cell-code}\nx2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"\\x82\\xb1\\x82\\xf1\\x82ɂ\\xbf\\x82\\xcd\"\n```\n:::\n\n```{.r .cell-code}\nparse_character(x1, locale = locale(encoding = \"Latin1\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"El Niño was particularly bad this year\"\n```\n:::\n\n```{.r .cell-code}\nparse_character(x2, locale = locale(encoding = \"Shift-JIS\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"こんにちは\"\n```\n:::\n:::\n\n\n\n## function `parse` in pkg `readr` {.smaller}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nparse_date(\"1 janvier 2015\", \"%d %B %Y\", locale = locale(\"fr\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2015-01-01\"\n```\n:::\n\n```{.r .cell-code}\nparse_date(\"01/02/15\", \"%m/%d/%y\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2015-01-02\"\n```\n:::\n\n```{.r .cell-code}\nparse_date(\"01/02/15\", \"%d/%m/%y\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2015-02-01\"\n```\n:::\n\n```{.r .cell-code}\nparse_date(\"01/02/15\", \"%y/%m/%d\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2001-02-15\"\n```\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nparse_datetime(\"2010-10-01T2010\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2010-10-01 20:10:00 UTC\"\n```\n:::\n\n```{.r .cell-code}\nlibrary(hms)\nparse_time(\"01:10 am\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n01:10:00\n```\n:::\n:::\n\n\n## Other packages for data importing\n\n-   Package `haven`: SPSS, Stata, SAS file\n\n-   Package `readxl`: Excel file .xls, .xlsx\n\n-   Package `jsonlite`/`htmltab`: json, html\n\n-   use `as_tibble` to coerce a data frame to a tibble\n\n\n\n\n\n\n",
    "supporting": [
      "lec-27_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}