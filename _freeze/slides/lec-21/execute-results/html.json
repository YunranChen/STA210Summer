{
  "hash": "ea382c85a34e752197c3fdde0bd9acfe",
  "result": {
    "markdown": "---\ntitle: \"LR: Model comparison\"\nsubtitle: \"STA 210 - Summer 2022\"\nauthor: \"Yunran Chen\"\nfooter:  \"[yunranchen.github.io/STA210Summer/](https://yunranchen.github.io/STA210Summer/)\"\nlogo: \"images/logo.png\"\nformat: \n  revealjs:\n    theme: slides.scss\n    transition: fade\n    slide-number: true\n    incremental: true \n    chalkboard: true\neditor: visual\nexecute:\n  freeze: auto\n  echo: true\n---\n\n\n\n\n# Welcome\n\n## Announcements\n\n::: nonincremental\n-   HW 3 and Lab 5 due tomorrow\n-   Monday's lab: Work on projects, make sure to get \\~10 mins with your TA to review proposal comments and get feedback on plans\n-   Over the weekend, due Monday night: Complete team peer evaluations\n-   Office hours reminder: Monday on Zoom, Thursday in person (Old Chem 213)\n:::\n\n# Application exercise\n\n::: appex\nðŸ“‹ [github.com/STA210-Summer22/ae-10-flight-delays](https://github.com/STA210-Summer22)\n:::\n",
    "supporting": [
      "lec-21_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}