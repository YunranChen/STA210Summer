{"title":"SLR: Model fitting in R with tidymodels","markdown":{"yaml":{"title":"SLR: Model fitting in R with tidymodels","subtitle":"STA 210 - Spring 2022","author":"Dr. Mine Ã‡etinkaya-Rundel","footer":"[sta210-s22.github.io/website](https://sta210-s22.github.io/website/)","logo":"images/logo.png","format":{"revealjs":{"theme":"slides.scss","multiplex":true,"transition":"fade","slide-number":true}},"editor":"visual","execute":{"freeze":"auto"}},"headingText":"| include: false","containsRefs":false,"markdown":"\n\n```{r setup}\nlibrary(countdown)\nknitr::opts_chunk$set(\n  fig.width = 6,\n  fig.asp = 0.618,\n  fig.align = \"center\",\n  out.width = \"90%\"\n)\n```\n\n# Welcome\n\n## Announcements\n\n-   If you're just joining the class, welcome! Go to the [course website](https://sta210-s22.github.io/website) and review content you've missed, read the syllabus, and complete the *Getting to know you* survey.\n-   Lab 1 is due Friday, at 5pm, on Gradescope.\n\n## Recap of last lecture {.smaller}\n\n::: incremental\n-   Used simple linear regression to describe the relationship between a quantitative predictor and quantitative outcome variable.\n\n-   Used the least squares method to estimate the slope and intercept.\n\n-   We interpreted the slope and intercept.\n\n    ::: incremental\n    -   **Slope:** For every one unit increase in $x$, we expect y to be higher/lower by $\\hat{\\beta}_1$ units, on average.\n    -   **Intercept:** If $x$ is 0, then we expect $y$ to be $\\hat{\\beta}_0$ units.\n    :::\n\n-   Predicted the response given a value of the predictor variable.\n\n-   Defined extrapolation and why we should avoid it.\n:::\n\n## Interested in the math behind it all?\n\nSee the supplemental notes on [Deriving the Least-Squares Estimates for Simple Linear Regression](/supplemental/slr-derivations.html) for more mathematical details on the derivations of the estimates of $\\beta_0$ and $\\beta_1$.\n\n## Outline\n\n-   Use tidymodels to fit and summarize regression models in R\n-   Complete an application exercise on exploratory data analysis and modeling\n\n## Computational setup\n\n```{r packages}\n#| echo: true\n#| message: false\n\n# load packages\nlibrary(tidyverse)       # for data wrangling\nlibrary(tidymodels)      # for modeling\nlibrary(fivethirtyeight) # for the fandango dataset\n\n# set default theme and larger font size for ggplot2\nggplot2::theme_set(ggplot2::theme_minimal(base_size = 16))\n\n# set default figure parameters for knitr\nknitr::opts_chunk$set(\n  fig.width = 8,\n  fig.asp = 0.618,\n  fig.retina = 3,\n  dpi = 300,\n  out.width = \"80%\"\n)\n```\n\n# Data\n\n## Movie ratings\n\n::: columns\n::: {.column width=\"70%\"}\n-   Data behind the FiveThirtyEight story [*Be Suspicious Of Online Movie Ratings, Especially Fandango's*](%22Be%20Suspicious%20Of%20Online%20Movie%20Ratings,%20Especially%20Fandango's%22)\n-   In the **fivethirtyeight** package: [`fandango`](https://fivethirtyeight-r.netlify.app/reference/fandango.html)\n-   Contains every film that has at least 30 fan reviews on Fandango, an IMDb score, Rotten Tomatoes critic and user ratings, and Metacritic critic and user scores\n:::\n\n::: {.column width=\"30%\"}\n![](images/lec-2/fandango.png){fig-alt=\"Fandango logo\" width=\"200\"}\n\n![](images/lec-2/imdb.png){fig-alt=\"IMDB logo\" width=\"200\"}\n\n![](images/lec-2/rotten-tomatoes.png){fig-alt=\"Rotten Tomatoes logo\" width=\"200\"}\n\n![](images/lec-2/metacritic.png){fig-alt=\"Metacritic logo\" width=\"200\"}\n:::\n:::\n\n## Data prep\n\n-   Rename Rotten Tomatoes columns as `critics` and `audience`\n-   Rename the dataset as `movie_scores`\n\n```{r data-prep}\n#| echo: true\nmovie_scores <- fandango %>%\n  rename(\n    critics = rottentomatoes, \n    audience = rottentomatoes_user\n  )\n```\n\n## Data visualization\n\n```{r}\nggplot(movie_scores, \n       aes(x = critics, y = audience)) +\n  geom_point(alpha = 0.5) + \n  labs(\n    x = \"Critics Score\" , \n    y = \"Audience Score\"\n    )\n```\n\n# Using R for SLR\n\n## Step 1: Specify model\n\n```{r}\n#| echo: true\nlinear_reg()\n```\n\n## Step 2: **Set model fitting *engine***\n\n```{r}\n#| echo: true\n# #| code-line-numbers: \"|2\"\n\nlinear_reg() %>%\n  set_engine(\"lm\") # lm: linear model\n```\n\n## Step 3: Fit model & estimate parameters\n\nusing **formula syntax**\n\n```{r}\n#| echo: true\n# #| code-line-numbers: \"|3\"\n\nlinear_reg() %>%\n  set_engine(\"lm\") %>%\n  fit(audience ~ critics, data = movie_scores)\n```\n\n## A closer look at model output\n\n```{r}\n#| echo: true\nmovie_fit <- linear_reg() %>%\n  set_engine(\"lm\") %>%\n  fit(audience ~ critics, data = movie_scores)\n\nmovie_fit\n```\n\n$$\\widehat{\\text{audience}} = 32.3155 + 0.5187 \\times \\text{critics}$$\n\n. . .\n\n**Note:** The intercept is off by a tiny bit from the hand-calculated intercept, this is likely just rounding error in the hand calculation.\n\n## The regression output\n\nWe'll focus on the first column for now...\n\n```{r}\n#| echo: true\n# #| code-line-numbers: \"|4\"\n\nlinear_reg() %>%\n  set_engine(\"lm\") %>%\n  fit(audience ~ critics, data = movie_scores) %>%\n  tidy()\n```\n\n## Prediction\n\n```{r}\n#| echo: true\n# #| code-line-numbers: \"|2|5\"\n\n# create a data frame for a new movie\nnew_movie <- tibble(critics = 50)\n\n# predict the outcome for a new movie\npredict(movie_fit, new_movie)\n```\n\n# Application exercise\n\n::: appex\nðŸ“‹ [github.com/sta210-s22/ae-1-dcbikeshare](https://github.com/sta210-s22/ae-1-dcbikeshare)\n:::\n\nfollowed by a demo of exporting your work and uploading to GradeScope\n\n# Recap\n\n-   Used tidymodels to fit and summarize regression models in R\n-   Completed an application exercise on exploratory data analysis and modeling\n"},"formats":{"revealjs":{"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"error":false,"eval":true,"cache":null,"freeze":"auto","echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","output-file":"lec-3.html"},"language":{},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"0.9.345","auto-stretch":true,"editor":"visual","title":"SLR: Model fitting in R with tidymodels","subtitle":"STA 210 - Spring 2022","author":"Dr. Mine Ã‡etinkaya-Rundel","footer":"[sta210-s22.github.io/website](https://sta210-s22.github.io/website/)","logo":"images/logo.png","theme":"slides.scss","multiplex":true,"transition":"fade","slideNumber":true}}}}